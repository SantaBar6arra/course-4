services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper
  ravendb:
    image: ravendb/ravendb
    container_name: ravendb
    ports:
      - "8080:8080"
      - "38888:38888"
    environment:
      - RAVEN_AdminPassword=StrongPasswordHere
    volumes:
      - ravendb_data:/var/lib/ravendb
  postgres:
    image: postgres:latest
    container_name: postgres-container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: course-4
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  ravendb_data:
    driver: local
  postgres_data:
    driver: local

networks:
  default:
    name: course_work_network
    external: false
# services:
# mongo:
#   image: mongo:latest
#   container_name: mongo-container
#   ports:
#     - "27017:27017"
#   restart: always
#   volumes:
#     - mongodb_data:/var/lib/mongodb/data
# couchdb:
#   image: couchdb:latest
#   container_name: couchdb-container
#   ports:
#     - "5984:5984"
#   environment:
#     - COUCHDB_USER=admin
#     - COUCHDB_PASSWORD=password
#   volumes:
#     - couchdb_data:/var/lib/couchdb/data
#   restart: always

# volumes:
# mongodb_data:
# couchdb_data:
